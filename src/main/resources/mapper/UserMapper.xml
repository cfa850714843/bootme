<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phigey.bootme.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.phigey.bootme.dao.entity.User">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    `id`, `name`, `job`, `phone_number`, `ip`, `company`, `email`, `address`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from `t_user`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from `t_user`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.phigey.bootme.dao.entity.User">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into `t_user` (`id`, `name`, `job`,
      `phone_number`, `ip`, `company`,
      `email`, `address`)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.phigey.bootme.dao.entity.User">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into `t_user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="job != null">
        `job`,
      </if>
      <if test="phoneNumber != null">
        `phone_number`,
      </if>
      <if test="ip != null">
        `ip`,
      </if>
      <if test="company != null">
        `company`,
      </if>
      <if test="email != null">
        `email`,
      </if>
      <if test="address != null">
        `address`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.phigey.bootme.dao.entity.UserExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from `t_user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.phigey.bootme.dao.entity.User">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update `t_user`
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        `job` = #{job,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        `phone_number` = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        `ip` = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        `company` = #{company,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        `email` = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        `address` = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.phigey.bootme.dao.entity.User">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update `t_user`
    set `name` = #{name,jdbcType=VARCHAR},
      `job` = #{job,jdbcType=VARCHAR},
      `phone_number` = #{phoneNumber,jdbcType=VARCHAR},
      `ip` = #{ip,jdbcType=VARCHAR},
      `company` = #{company,jdbcType=VARCHAR},
      `email` = #{email,jdbcType=VARCHAR},
      `address` = #{address,jdbcType=VARCHAR}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>